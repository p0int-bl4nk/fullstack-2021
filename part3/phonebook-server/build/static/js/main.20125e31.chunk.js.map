{"version":3,"sources":["services/phonebookService.js","components/Notification.js","services/notificationService.js","components/PhoneBook.js","App.js","index.js"],"names":["baseUrl","phonebookService","getAll","axios","get","then","response","data","update","id","updatedData","put","create","newData","post","deletePerson","delete","Notification","message","type","className","notificationService","handleNotification","notification","setNotification","setTimeout","DisplayPhoneBook","list","setList","map","person","name","number","onClick","toDelete","find","window","confirm","filter","catch","error","console","log","handleDelete","Person","AddNewNumber","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","operation","newPerson","prev","concat","p","htmlFor","value","onChange","target","Filter","setFilter","Phonebook","persons","setPersons","useEffect","err","toLowerCase","includes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20125e31.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios\n    .get(`${baseUrl}`)\n    .then(response => response.data);\n}\n\nconst update = (id, updatedData) => {\n  return axios\n    .put(`${baseUrl}/${id}`, updatedData)\n    .then(response => response.data);\n}\n\nconst create = (newData) => {\n  return axios\n    .post(`${baseUrl}`, newData)\n    .then(response => response.data);\n}\n\nconst deletePerson = (id) => {\n  return axios\n    .delete(`${baseUrl}/${id}`);\n}\n\nconst phonebookService = {getAll, update, create, deletePerson};\nexport default phonebookService;","export default function Notification({message, type}) {\n  if (!message) {\n    return null;\n  }\n  return (\n    <div className={type === 'error' ? 'error' : 'success'}>\n      {message}\n    </div>\n  );\n}","const handleNotification = (notification, setNotification) => {\n  setNotification(notification);\n  setTimeout(\n    () => setNotification({message: '', type: ''}),\n    5000\n  );\n}\n\nconst notificationService = {handleNotification};\nexport default notificationService;","import phonebookService from \"../services/phonebookService\";\nimport {useEffect, useState} from \"react\";\nimport Notification from \"./Notification\";\nimport notificationService from \"../services/notificationService\";\n\nconst DisplayPhoneBook = ({list, setList, setNotification}) => {\n  const handleDelete = id => {\n    const toDelete = list.find(person => person.id === id);\n    if (window.confirm(`Delete '${toDelete.name}'?`)) {\n      phonebookService\n        .deletePerson(id)\n        .then(() => {\n          setList(list.filter(person => person.id !== id));\n\n          notificationService\n            .handleNotification({\n              message: `'${toDelete.name}' has been deleted.`,\n              type: 'success'\n            }, setNotification);\n        })\n        .catch(error => {\n          console.log('delete service error:', error);\n\n          notificationService\n            .handleNotification({\n              message: `'${toDelete.name}' has already been removed from the server.`,\n              type: 'error'\n            }, setNotification);\n          setList(list.filter(person => person.id !== id));\n        });\n    }\n  }\n\n  return (\n    <>\n      <h3>Numbers</h3>\n      {\n        list.map(person => (\n          <div key={person.id}>\n            <Person\n              name={person.name}\n              number={person.number}\n            />\n            <button\n              type='button'\n              onClick={() => handleDelete(person.id)}\n            >\n              Delete\n            </button>\n          </div>\n        ))\n      }\n    </>\n  )\n}\n\nconst Person = ({name, number}) => {\n  return (\n    <p>{name} {number}</p>\n  )\n}\n\nconst AddNewNumber = ({list, setList, setNotification}) => {\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let person = list.find(person => person.name === newName);\n    let operation = 'add';\n    if (person) {\n      operation = window.confirm(\n        `'${newName}' is already added to the phonebook. Do you want to replace the old number with the new one?`\n      ) ? 'update' : 'discard';\n    }\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (operation === 'add') {\n      phonebookService\n        .create(newPerson)\n        .then((data) => {\n          setList(prev => prev.concat(data));\n          notificationService\n            .handleNotification({\n              message: `'${newName}' is successfully added to the phonebook.`,\n              type: 'success'\n            }, setNotification);\n        })\n        .catch((error) => {\n          console.log('create service error:', error.response);\n          notificationService\n            .handleNotification({\n              message: error.response.data.error,\n              type: 'error'\n            }, setNotification);\n        });\n    } else if (operation === 'update') {\n      phonebookService\n        .update(person.id, newPerson)\n        .then(data => {\n          setList(prev => prev.map(p => p.id === person.id ? data : p));\n\n          notificationService\n            .handleNotification({\n            message: `${newName}'s number is successfully updated.`,\n            type: 'success'\n          }, setNotification);\n        })\n        .catch((error) => {\n          console.log('update service error:', error);\n          notificationService\n            .handleNotification({\n              message: error.response.data.error,\n              type: 'error'\n            }, setNotification);\n        });\n    } else {\n      return;\n    }\n    setNewName('');\n    setNewNumber('');\n  }\n\n  return (\n    <>\n      <h3>Add a new number</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            name='name'\n            value={newName}\n            onChange={({target}) => setNewName(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor='number'>Number:</label>\n          <input\n            name='number'\n            value={newNumber}\n            onChange={({target}) => setNewNumber(target.value)}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst Filter = ({filter, setFilter}) => {\n  return (\n    <div>\n      Filter shown with\n      <input\n        value={filter}\n        onChange={({target}) => setFilter(target.value)}\n      />\n    </div>\n  );\n}\n\nexport default function Phonebook () {\n  const [ notification, setNotification ] = useState({message: '', type: ''});\n  const [ persons, setPersons ] = useState([]);\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then((list) => {\n        setPersons(list);\n      })\n      .catch((err) => {\n        console.log('getAll api error', err);\n        notificationService\n          .handleNotification({\n            message: `Error fetching phonebook from server!`,\n            type: 'error'\n          }, setNotification);\n      });\n  }, []);\n\n  const [ filter, setFilter ] = useState('');\n\n  const list = filter\n    ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={notification.message}\n        type={notification.type}\n      />\n      <Filter\n        filter={filter}\n        setFilter={setFilter}\n      />\n      <AddNewNumber\n        list={persons}\n        setList={setPersons}\n        setNotification={setNotification}\n      />\n      <DisplayPhoneBook\n        list={list}\n        setList={setPersons}\n        setNotification={setNotification}\n      />\n    </div>\n  )\n}","import React from 'react';\nimport Phonebook from \"./components/PhoneBook\";\n\nconst App = () => {\n  return (\n    <Phonebook />\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}